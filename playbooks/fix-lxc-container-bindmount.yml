---
# Copyright 2018-Present, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License

- hosts: all_containers
  gather_facts: "{{ gather_facts | default(true) }}"
  vars_prompt:
    - name: user_input
      prompt: "This playbook fixes potential LXC container bind mounts and restarts all containers automatically.\nPlease load the Ansible SSH key into a SSH agent prior to executing this playbook. Proceed?"
      default: False
  tasks:
  - name: Set default bind mounts (bind var/log)
    set_fact:
      lxc_default_bind_mounts: '{{ lxc_default_bind_mounts | default([{"bind_dir_path": "/var/log", "mount_path": "/openstack/log/{{ inventory_hostname }}"}]) }}'

  - name: Ensure mount directories exists
    file:
      path: "{{ item['mount_path'] }}"
      state: "directory"
    with_items:
      - "{{ lxc_default_bind_mounts | default([]) }}"
      - "{{ list_of_bind_mounts | default([]) }}"
    delegate_to: "{{ physical_host }}"
    when:
      - not is_metal | bool
      - user_input | bool

  - name: Add bind mount configuration to container
    lineinfile:
      dest: "/var/lib/lxc/{{ inventory_hostname }}/config"
      line: "lxc.mount.entry = {{ item['mount_path'] }} {{ item['bind_dir_path'].lstrip('/') }} none bind,create=dir 0 0"
      backup: "true"
    with_items:
      - "{{ lxc_default_bind_mounts | default([]) }}"
      - "{{ list_of_bind_mounts | default([]) }}"
    delegate_to: "{{ physical_host }}"
    when:
      - not is_metal | bool
      - user_input | bool
    register: _mc

  - name: Synchronize container logging data
    synchronize:
      mode: "pull"
      src: "/var/log/*"
      dest: "/openstack/log/{{ inventory_hostname }}"
    delegate_to: "{{ physical_host }}"
    when:
      - not is_metal | bool
      - user_input | bool

  # Due to https://github.com/ansible/ansible-modules-extras/issues/2691
  - name: Stop Container
    command: >
      lxc-stop --name {{ inventory_hostname }}
      --logfile {{ lxc_container_log_path }}/lxc-{{ inventory_hostname }}.log
      --logpriority {{ (debug | bool) | ternary('DEBUG', 'INFO') }}
    delegate_to: "{{ physical_host }}"
    register: container_stop
    until: container_stop is success
    retries: 3
    when:
      - not is_metal | bool
      - (_mc is defined and _mc | changed)
      - user_input | bool

  # Due to https://github.com/ansible/ansible-modules-extras/issues/2691
  - name: Start Container
    command: >
      lxc-start --daemon --name {{ inventory_hostname }}
      --logfile {{ lxc_container_log_path }}/lxc-{{ inventory_hostname }}.log
      --logpriority {{ (debug | bool) | ternary('DEBUG', 'INFO') }}
    delegate_to: "{{ physical_host }}"
    register: container_start
    until: container_start is success
    retries: 3
    when:
      - not is_metal | bool
      - (_mc is defined and _mc | changed)
      - user_input | bool

  - name: Wait for container ssh
    wait_for:
      port: "22"
      delay: "{{ ssh_delay }}"
      search_regex: "OpenSSH"
      host: "{{ ansible_ssh_host }}"
    delegate_to: "{{ physical_host }}"
    register: ssh_wait_check
    until: ssh_wait_check is success
    retries: 3
    when:
      - (_mc is defined and _mc | changed)
      - not is_metal | bool
      - user_input | bool
